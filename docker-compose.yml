version: '3.8'

services:
  postgres:
    image: postgres:16.2
    container_name: virtualgr-postgres
    environment:
      POSTGRES_DB: virtualgr_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - virtualgr-network

  virtualgr:
    build: .
    container_name: virtualgr-app
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/virtualgr_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    networks:
      - virtualgr-network

  prometheus:
    image: prom/prometheus:latest
    container_name: virtualgr-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - virtualgr-network
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: virtualgr-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - virtualgr-network
    restart: always

networks:
  virtualgr-network:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: